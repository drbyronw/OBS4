openapi: 3.0.1
info:
  title: OBS4
  description: >-
    This is a Online Banking Serive which will allow users to login and recieve
    a token. This token will give users access to four apis to purchase and sell
    shares.For this sample, you can use the SECRET_KEY `welp` to test the
    authorization     .
  version: 1.0.0
servers:
  - url: // GOOGLE SERVER HERE
  - url: ''
tags:
  - name: MSFT
    description: Access to buy and sell GOOG shares
  - name: GOOG
    description: Access to buy and sell GOOG shares
  - name: FB
    description: Access to buy and sell GOOG shares
  - name: AAPL
    description: Access to buy and sell AAPL shares
  - name: User
    description: Operations about user
paths:
  /pet:
    put:
      tags:
        - pet
      summary: Update an existing pet
      operationId: updatePet
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Pet not found
          content: {}
        '405':
          description: Validation exception
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      x-codegen-request-body-name: body
    post:
      tags:
        - pet
      summary: Add a new pet to the store
      operationId: addPet
      requestBody:
        description: Pet object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Pet'
        required: true
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
      x-codegen-request-body-name: body
  /pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: available
              enum:
                - available
                - pending
                - sold
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid status value
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /pet/findByTags:
    get:
      tags:
        - pet
      summary: Finds Pets by tags
      description: >-
        Muliple tags can be provided with comma separated strings. Use        
        tag1, tag2, tag3 for testing.
      operationId: findPetsByTags
      parameters:
        - name: tags
          in: query
          description: Tags to filter by
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid tag value
          content: {}
      deprecated: true
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/pet/{petId}':
    get:
      tags:
        - pet
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Pet'
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Pet not found
          content: {}
      security:
        - api_key: []
    post:
      tags:
        - pet
      summary: Updates a pet in the store with form data
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the pet
                status:
                  type: string
                  description: Updated status of the pet
      responses:
        '405':
          description: Invalid input
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
    delete:
      tags:
        - pet
      summary: Deletes a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Pet not found
          content: {}
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  '/pet/{petId}/uploadImage':
    post:
      tags:
        - pet
      summary: uploads an image
      operationId: uploadFile
      parameters:
        - name: petId
          in: path
          description: ID of pet to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                additionalMetadata:
                  type: string
                  description: Additional data to pass to server
                file:
                  type: string
                  description: file to upload
                  format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /aapl/share_price/:
    get:
      tags:
        - AAPL
      summary: Returns current price of AAPL Stock
      description: 'Returns a JSON of {"Price":price}'
      operationId: getInventory
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []
  /aapl/shares/:
    get:
      tags:
        - AAPL
      summary: Return shares purchased by user
      operationId: placeOrder
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Order
          content: {}
      x-codegen-request-body-name: body
  /goog/buy/:
      get:
        tags:
          - GOOG
        summary: Buy amount of shares passed by params called "amount"
        description: >-
          For valid response try integer IDs with value >= 1 and <= 10.        
          Other values will generated exceptions
        operationId: googBuyID
        parameters:
          - name: orderId
            in: path
            description: ID of pet that needs to be fetched
            required: true
            schema:
              maximum: 10
              minimum: 1
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid ID supplied
            content: {}
          '404':
            description: Order not found
            content: {}
            
  /goog/sell/:
      get:
        tags:
          - GOOG
        summary: Sell amount of shares passed by params called "amount"
        description: >-
          For valid response try integer IDs with value >= 1 and <= 10.        
          Other values will generated exceptions
        operationId: googSellID
        parameters:
          - name: orderId
            in: path
            description: ID of pet that needs to be fetched
            required: true
            schema:
              maximum: 10
              minimum: 1
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid ID supplied
            content: {}
          '404':
            description: Order not found
            content: {}
  /goog/shares/:
      get:
        tags:
          - GOOG
        summary: Return shares purchased by user
        description: >-
          For valid response try integer IDs with value >= 1 and <= 10.        
          Other values will generated exceptions
        operationId: googShareID
        parameters:
          - name: orderId
            in: path
            description: ID of pet that needs to be fetched
            required: true
            schema:
              maximum: 10
              minimum: 1
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid ID supplied
            content: {}
          '404':
            description: Order not found
            content: {}
  /goog/get_price/:
      get:
        tags:
          - GOOG
        summary: Return current price of GOOG Stock
        description: >-
          For valid response try integer IDs with value >= 1 and <= 10.        
          Other values will generated exceptions
        operationId: googgetPriceID
        parameters:
          - name: orderId
            in: path
            description: ID of pet that needs to be fetched
            required: true
            schema:
              maximum: 10
              minimum: 1
              type: integer
              format: int64
        responses:
          '200':
            description: successful operation
          '400':
            description: Invalid ID supplied
            content: {}
          '404':
            description: Order not found
            content: {}
  /aapl/buy/:
    get:
      tags:
        - AAPL
      summary: Buy amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /aapl/sell/:
    get:
      tags:
        - AAPL
      summary: Sell amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /fb/buy/:
    get:
      tags:
        - FB
      summary: Buy amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: fbBuyID
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /fb/share_price/:
    get:
      tags:
        - FB
      summary: Returns current price of AAPL Stock
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: fbSharePriceID
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /fb/sell/:
    get:
      tags:
        - FB
      summary: Sell amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: fbSellID
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /api/user/verify/:
    get:
      tags:
        - FB
      summary: Sell amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: fbUserVerifyID
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /msft/buy/:
    get:
      tags:
        - MSFT
      summary: Buy amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.        
        Other values will generated exceptions
      operationId: msftBuyID
      parameters:
        - name: orderId
          in: path
          description: ID of pet that needs to be fetched
          required: true
          schema:
            maximum: 10
            minimum: 1
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /msft/sell/:
    get:
      tags:
        - MSFT
      summary: Sell amount of shares passed by params called "amount"
      description: >-
        For valid response try integer IDs with positive integer value.        
        Negative or non-integer values will generate API errors
      operationId: msftSellID
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
          content: {}
        '404':
          description: Order not found
          content: {}
  /user/logout:
    get:
      tags:
        - User
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          content: {}
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        firstName:
          type: string
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
